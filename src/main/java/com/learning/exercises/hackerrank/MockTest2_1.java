package com.learning.exercises.hackerrank;

import static org.assertj.core.api.Assertions.assertThat;

public class MockTest2_1 {

    public static void main(String[] args) {

//        assertThat(palindromeIndex("quyjjdcgsvvsgcdjjyq")).isEqualTo(1);
        assertThat(palindromeIndex("")).isEqualTo(-1);

//        assertThat(palindromeIndex("kdajak")).isEqualTo(1);
//        assertThat(palindromeIndex("bcbc")).isIn(0, 3);
//        assertThat(palindromeIndex("aaab")).isEqualTo(3);
//        assertThat(palindromeIndex("baa")).isEqualTo(0);
//        assertThat(palindromeIndex("aaa")).isEqualTo(-1);
//        assertThat(palindromeIndex("a")).isEqualTo(-1);

    }

    public static int palindromeIndex(String s) {
        int n = s.length();

        if (n < 2) return -1;
        if (isPalindrome(s)) return -1;

        if (isPalindrome(s.substring(1, n))) return 0;
        if (isPalindrome(s.substring(0, n - 1))) return n - 1;

        for (int i = 1; i < n - 1; ++i) {
            String cur = s.substring(0, i) + s.substring(i + 1, n);
            if (isPalindrome(cur)) return i;
        }

        return -1;
    }

    private static boolean isPalindrome(String s) {
        int n = s.length();
        for (int i = 0; i < n / 2; ++i) {
            if (s.charAt(i) != s.charAt(n - 1 - i)) {
                return false;
            }
        }
        return true;
    }


}